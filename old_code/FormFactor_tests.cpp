#include "FormFactor_1D.h"
#include "FormFactor_2D.h"
#include "FormFactor_resolution.h"
#include "FormFactor_saturation_data.h"
#include "FF_WS_Transforms.h"
#include "WoodsSaxon_1D.h"
#include "WoodsSaxon_2D.h"

using namespace std;


// FormFactor_1D tests
void FFq_fun()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0.001, q_max = 0.3, t_min = 0.0001, t_max = 0.1;
    double phi_min = 0, phi_max = 2*pi;
    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test = ff.getFormFactorq_1D();
    test->Draw();
}

void FFq_squared_fun()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0.001, q_max = 0.3, t_min = 0.0001, t_max = 0.1;
    double phi_min = 0, phi_max = 2*pi;
    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test = ff.getFormFactorq2_1D();
    test->Draw();
}

void FFt_fun()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0.001, q_max = 0.3, t_min = 0.0001, t_max = 0.1;
    double phi_min = 0, phi_max = 2*pi;
    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test = ff.getFormFactort_1D();
    test->Draw();
}

void FFt_squared_fun()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0.001, q_max = 0.3, t_min = 0.0001, t_max = 0.1;
    double phi_min = 0, phi_max = 2*pi;
    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test = ff.getFormFactort2_1D();
    test->Draw();
}

void FFq_cut_fun()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0.001, q_max = 0.3, t_min = 0.0001, t_max = 0.1;
    double phi_min = 0, phi_max = 2*pi, bins = 1000, r_min = 0, r_max = 10;
    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test = ff.getCutFormFactor_q();
    test->Draw();
}

void FFq_squared_cut_fun()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0.001, q_max = 0.3, t_min = 0.0001, t_max = 0.1;
    double phi_min = 0, phi_max = 2*pi;
    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test = ff.getCutFormFactor_q2();
    test->Draw();
}

void FFt_cut_fun()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0.001, q_max = 0.3, t_min = 0.0001, t_max = 0.1;
    double phi_min = 0, phi_max = 2*pi;
    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test = ff.getCutFormFactor_t();
    test->Draw();
}

void FFt_squared_cut_fun()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0.001, q_max = 0.3, t_min = 0.0001, t_max = 0.1;
    double phi_min = 0, phi_max = 2*pi;
    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test = ff.getCutFormFactor_t2();
    test->Draw();
}

void FF_transform_fun()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0, q_max = 0.5, t_min = 0, t_max = 0.1;
    double phi_min = 0, phi_max = 2*pi, bins = 1000, r_min = 0, r_max = 15;
    FF_WS_Transforms ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,bins,r_min,r_max);
    TF1 *test = ff.getFFtransform();
    test->Draw();
}

void FF_transform_hist()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0, q_max = 0.5, t_min = 0, t_max = 0.1;
    double phi_min = 0, phi_max = 2*pi, bins = 1000, r_min = 0.015, r_max = 15;
    FF_WS_Transforms ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,bins,r_min,r_max);
    TH1D *test = ff.getTransformFFhist();
    test->Draw();
}


// FormFactor_2D tests
void FFq_2D()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double qy_min = 0, qy_max = 0.5, qx_min = 0, qx_max = 0.5;
    double ty_min = 0, ty_max = 0.25, tx_min = 0, tx_max = 0.25, bins = 1000;
    double x_min= 0.015, x_max = 15, y_min = 0.015, y_max = 15;
    FormFactor_2D ff(A,Vo,R,a0,qy_min,qy_max,qx_min,qx_max,tx_min,tx_max,ty_min,ty_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max);
    TH2D *test = ff.create_FormFactorq_2Dcontour("2D Form Factor: |F(qx,qy)|^{2}","2D Form Factor: |F(qx,qy)|^{2}",bins,qx_min,qx_max,bins,qy_min,qy_max);
    test->Draw();
    //test->ProjectionY()->Draw();
}

void FFt_2D()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double qy_min = 0, qy_max = 0.5, qx_min = 0, qx_max = 0.5;
    double ty_min = 0, ty_max = 0.25, tx_min = 0, tx_max = 0.25, bins = 1000;
    double x_min= 0, x_max = 15, y_min = 0, y_max = 15;
    FormFactor_2D ff(A,Vo,R,a0,qy_min,qy_max,qx_min,qx_max,tx_min,tx_max,ty_min,ty_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max);
    TH2D *test = ff.create_FormFactort_2Dcontour("2D Form Factor: |F(tx,ty)|^{2}","2D Form Factor: |F(tx,ty)|^{2}",bins,tx_min,tx_max,bins,ty_min,ty_max);
    //test->Draw();
    test->ProjectionY()->Draw();
}

void FFt_2D_transform_hist()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double qy_min = 0, qy_max = 0.5, qx_min = 0, qx_max = 0.5;
    double ty_min = 0, ty_max = 0.25, tx_min = 0, tx_max = 0.25, bins = 1000;
    double x_min= 0, x_max = 15, y_min = 0, y_max = 15;
    FormFactor_2D ff(A,Vo,R,a0,qy_min,qy_max,qx_min,qx_max,tx_min,tx_max,ty_min,ty_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max);
    TH2D *test = ff.getFFtransform_2D();
    //test->Draw();
    test->ProjectionY()->Draw();
}


// FormFactor_resolution tests
void smeared_FFq()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0, q_max = 0.5, t_min = 0, t_max = 0.25, phi_min = 0, phi_max = 2*pi;
    double qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double ty_min = 0, ty_max = 0.25, tx_prime_min = 0, tx_prime_max = 0.25, bins = 1000; 
    double x_min = 0, x_max = 15, y_min = 0, y_max = 15, r_min = 0, r_max = 15;
    double sigma = 0.05;
    FormFactor_resolution ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma);
    TH2D *test = ff.create_FormFactorq_2Dcontour("Smeared Form Factor: |F(q)|^{2}","Smeared Form Factor: |F(q)|^{2}",bins,qx_prime_min,qx_prime_max,bins,qy_min,qy_max);
    test->Draw();
    //test->ProjectionY()->Draw();
    
}

void smeared_FFt()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0, q_max = 0.5, t_min = 0, t_max = 0.25, phi_min = 0, phi_max = 2*pi;
    double qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double ty_min = 0, ty_max = 0.25, tx_prime_min = 0, tx_prime_max = 0.25, bins = 1000; 
    double x_min = 0, x_max = 15, y_min = 0, y_max = 15, r_min = 0, r_max = 15;
    double sigma = 0.01;
    FormFactor_resolution ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma);
    TH2D *test = ff.create_FormFactort_2Dcontour("Smeared Form Factor: |F(t)|^{2}","Smeared Form Factor: |F(t)|^{2}",bins,tx_prime_min,tx_prime_max,bins,ty_min,ty_max);
    //test->Draw();
    test->ProjectionY()->Draw();
}

void smeared_wedge_FFq()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0, q_max = 0.5, t_min = 0, t_max = 0.25, phi_min = 0, phi_max = 2*pi;
    double qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double ty_min = 0, ty_max = 0.25, tx_prime_min = 0, tx_prime_max = 0.25, bins = 1000; 
    double x_min = 0, x_max = 15, y_min = 0, y_max = 15, r_min = 0, r_max = 15;
    double sigma = 0.01;
    FormFactor_resolution ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma);
    TF1 *test = ff.getFormFactor_wResWedge_q();
    test->Draw();
}

void smeared_wedge_FFt()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0, q_max = 0.5, t_min = 0, t_max = 0.25, phi_min = 0, phi_max = 2*pi;
    double qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double ty_min = 0, ty_max = 0.25, tx_prime_min = 0, tx_prime_max = 0.25, bins = 1000; 
    double x_min = 0, x_max = 15, y_min = 0, y_max = 15, r_min = 0, r_max = 15;
    double sigma = 0.01;
    FormFactor_resolution ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma);
    TF1 *test = ff.getFormFactor_wResWedge_t();
    test->SetLineColor(kBlack);   
    test->Draw();

    FormFactor_1D ff2(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test2 = ff2.getCutFormFactor_t2();
    test2->SetLineColor(kRed); 
    test2->SetLineStyle(3);    
    test2->Draw("same");
}


// FormFactor_saturation_data tests
void FF_phi_saturation()
{
    // Data from phi saturation model plot scan
    const int bins = 72;
    double min = 0, max = .18;
    double x_vals[bins] = {0.00149180044251802,0.00414660644107207,0.00658017860641328,0.00901375077175449,0.0116685567703085,0.0141021289356497,0.0167569349342038,0.019190507099545,
0.0216240792648862,0.0240576514302274,0.0264912235955686,0.0291460295941226,0.031358367926251,0.0340131739248051,0.0364467460901463,0.0388803182554875,0.0413138904208287,
0.0437474625861699,0.0464022685847239,0.0488358407500651,0.0514906467486192,0.0539242189139604,0.0565790249125144,0.0587913632446428,0.0614461692431968,0.063879741408538,
0.0663133135738793,0.0687468857392204,0.0714016917377745,0.0738352639031157,0.0762688360684569,0.078923642067011,0.0813572142323522,0.0837907863976934,0.0864455923962474,
0.0888791645615886,0.0913127367269298,0.093746308892271,0.0961798810576122,0.0988346870561663,0.101268259221507,0.103701831386849,0.10613540355219,0.108347741884318,
0.111223781716085,0.113657353881426,0.115869692213555,0.118745732045322,0.121400538043876,0.123391642542791,0.126267682374558,0.128480020706686,0.130913592872028,0.133568398870582,
0.13578073720271,0.138656777034477,0.140869115366605,0.143523921365159,0.145736259697288,0.148391065695842,0.151045871694396,0.153479443859737,0.155913016025078,0.158346588190419,
0.161001394188973,0.163213732521102,0.165868538519656,0.168302110684997,0.170735682850338,0.173390488848892,0.175824061014234,0.178257633179575};
    double y_vals[bins] = {558853.176136302,224087.526703047,77159.7780282615,21685.4626196854,3859.28092747389,469.329022940005,289.742995521137,760.224527180162,
1470.8807418139,1802.07568265643,1669.9354709361,1434.01276162091,1170.46235898057,841.471980674726,519.487609780666,282.480517526656,122.231121530435,44.2796290689089,
12.7645685962943,8.2906879074936,17.31009647318,34.352592563701,55.6447229185968,73.5686667137878,87.8747301398829,92.4512729862438,94.8281637591125,90.133959553294,
79.3900768010247,68.1741212520722,54.2499745313981,42.0876893247695,31.8336312913207,22.312279620763,14.1287559597991,8.94672119409074,4.99001275499674,2.71340713225333,
1.43847998384123,1.00823457225525,1.11598759598992,1.47546281479756,2.21472290755771,3.15981484859246,4.07292198289417,4.74299606783303,5.523310241139,6.11360281380503,
6.59736568024521,6.59736568024521,6.43200111987633,5.96036388624306,5.523310241139,5.11830428512649,4.50820725397009,3.87130332084099,3.08061332807508,2.64539492870511,
2.15921034425629,1.55230536986868,1.14467925737936,0.888053964582182,0.638442170129982,0.384266614281411,0.29811799949135,0.198608151462336,0.12899755970887,
0.139204998947095,0.150220141959229,0.162106901482951,0.198608151462336,0.237229223974273,};
    
    FormFactor_saturation_data ff;
    TGraph *test = ff.createGraph_data_noRes_noCut("test phi sat","|t| [GeV^{2}]","d#sigma/dt [nb/GeV^{2}]",bins,x_vals,y_vals);
}

void FF_phi_saturation_wRes()
{
    // Data from phi saturation model plot scan
    const int bins = 72;
    double min = 0, max = .18;
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double phi_min = 0, phi_max = 2*pi, qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double x_vals[bins] = {0.00149180044251802,0.00414660644107207,0.00658017860641328,0.00901375077175449,0.0116685567703085,0.0141021289356497,0.0167569349342038,0.019190507099545,
0.0216240792648862,0.0240576514302274,0.0264912235955686,0.0291460295941226,0.031358367926251,0.0340131739248051,0.0364467460901463,0.0388803182554875,0.0413138904208287,
0.0437474625861699,0.0464022685847239,0.0488358407500651,0.0514906467486192,0.0539242189139604,0.0565790249125144,0.0587913632446428,0.0614461692431968,0.063879741408538,
0.0663133135738793,0.0687468857392204,0.0714016917377745,0.0738352639031157,0.0762688360684569,0.078923642067011,0.0813572142323522,0.0837907863976934,0.0864455923962474,
0.0888791645615886,0.0913127367269298,0.093746308892271,0.0961798810576122,0.0988346870561663,0.101268259221507,0.103701831386849,0.10613540355219,0.108347741884318,
0.111223781716085,0.113657353881426,0.115869692213555,0.118745732045322,0.121400538043876,0.123391642542791,0.126267682374558,0.128480020706686,0.130913592872028,0.133568398870582,
0.13578073720271,0.138656777034477,0.140869115366605,0.143523921365159,0.145736259697288,0.148391065695842,0.151045871694396,0.153479443859737,0.155913016025078,0.158346588190419,
0.161001394188973,0.163213732521102,0.165868538519656,0.168302110684997,0.170735682850338,0.173390488848892,0.175824061014234,0.178257633179575};
    double y_vals[bins] = {558853.176136302,224087.526703047,77159.7780282615,21685.4626196854,3859.28092747389,469.329022940005,289.742995521137,760.224527180162,
1470.8807418139,1802.07568265643,1669.9354709361,1434.01276162091,1170.46235898057,841.471980674726,519.487609780666,282.480517526656,122.231121530435,44.2796290689089,
12.7645685962943,8.2906879074936,17.31009647318,34.352592563701,55.6447229185968,73.5686667137878,87.8747301398829,92.4512729862438,94.8281637591125,90.133959553294,
79.3900768010247,68.1741212520722,54.2499745313981,42.0876893247695,31.8336312913207,22.312279620763,14.1287559597991,8.94672119409074,4.99001275499674,2.71340713225333,
1.43847998384123,1.00823457225525,1.11598759598992,1.47546281479756,2.21472290755771,3.15981484859246,4.07292198289417,4.74299606783303,5.523310241139,6.11360281380503,
6.59736568024521,6.59736568024521,6.43200111987633,5.96036388624306,5.523310241139,5.11830428512649,4.50820725397009,3.87130332084099,3.08061332807508,2.64539492870511,
2.15921034425629,1.55230536986868,1.14467925737936,0.888053964582182,0.638442170129982,0.384266614281411,0.29811799949135,0.198608151462336,0.12899755970887,
0.139204998947095,0.150220141959229,0.162106901482951,0.198608151462336,0.237229223974273,};
    
    vector<double> x_vals_vec(x_vals, x_vals + 72);
    vector<double> par = {A,Vo,R,a0,phi_min,phi_max,qy_min,qx_prime_min,qy_min,qx_prime_min};
    vector<double> var(x_vals, x_vals + 72);
    
    FormFactor_saturation_data ff;
    ff.createGraph_data_wRes_noCut(var, par);
}

void FF_phi_saturation_wCut()
{
    // Data from phi saturation model plot scan
    const int bins = 72;
    double min = 0, max = .18;
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double phi_min = 0, phi_max = 2*pi, qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double x_vals[bins] = {0.00149180044251802,0.00414660644107207,0.00658017860641328,0.00901375077175449,0.0116685567703085,0.0141021289356497,0.0167569349342038,0.019190507099545,
0.0216240792648862,0.0240576514302274,0.0264912235955686,0.0291460295941226,0.031358367926251,0.0340131739248051,0.0364467460901463,0.0388803182554875,0.0413138904208287,
0.0437474625861699,0.0464022685847239,0.0488358407500651,0.0514906467486192,0.0539242189139604,0.0565790249125144,0.0587913632446428,0.0614461692431968,0.063879741408538,
0.0663133135738793,0.0687468857392204,0.0714016917377745,0.0738352639031157,0.0762688360684569,0.078923642067011,0.0813572142323522,0.0837907863976934,0.0864455923962474,
0.0888791645615886,0.0913127367269298,0.093746308892271,0.0961798810576122,0.0988346870561663,0.101268259221507,0.103701831386849,0.10613540355219,0.108347741884318,
0.111223781716085,0.113657353881426,0.115869692213555,0.118745732045322,0.121400538043876,0.123391642542791,0.126267682374558,0.128480020706686,0.130913592872028,0.133568398870582,
0.13578073720271,0.138656777034477,0.140869115366605,0.143523921365159,0.145736259697288,0.148391065695842,0.151045871694396,0.153479443859737,0.155913016025078,0.158346588190419,
0.161001394188973,0.163213732521102,0.165868538519656,0.168302110684997,0.170735682850338,0.173390488848892,0.175824061014234,0.178257633179575};
    double y_vals[bins] = {558853.176136302,224087.526703047,77159.7780282615,21685.4626196854,3859.28092747389,469.329022940005,289.742995521137,760.224527180162,
1470.8807418139,1802.07568265643,1669.9354709361,1434.01276162091,1170.46235898057,841.471980674726,519.487609780666,282.480517526656,122.231121530435,44.2796290689089,
12.7645685962943,8.2906879074936,17.31009647318,34.352592563701,55.6447229185968,73.5686667137878,87.8747301398829,92.4512729862438,94.8281637591125,90.133959553294,
79.3900768010247,68.1741212520722,54.2499745313981,42.0876893247695,31.8336312913207,22.312279620763,14.1287559597991,8.94672119409074,4.99001275499674,2.71340713225333,
1.43847998384123,1.00823457225525,1.11598759598992,1.47546281479756,2.21472290755771,3.15981484859246,4.07292198289417,4.74299606783303,5.523310241139,6.11360281380503,
6.59736568024521,6.59736568024521,6.43200111987633,5.96036388624306,5.523310241139,5.11830428512649,4.50820725397009,3.87130332084099,3.08061332807508,2.64539492870511,
2.15921034425629,1.55230536986868,1.14467925737936,0.888053964582182,0.638442170129982,0.384266614281411,0.29811799949135,0.198608151462336,0.12899755970887,
0.139204998947095,0.150220141959229,0.162106901482951,0.198608151462336,0.237229223974273,};
    
    vector<double> x_vals_vec(x_vals, x_vals + 72);
    vector<double> y_vals_vec(y_vals, y_vals + 72);
    vector<double> par = {A,Vo,R,a0,phi_min,phi_max,qy_min,qx_prime_min,qy_min,qx_prime_min};
    vector<double> var(x_vals, x_vals + 72);
    
    FormFactor_saturation_data ff;
    ff.createGraph_data_noRes_wCut(var,par);
}

void FF_phi_saturation_wRes_wCut()
{
    // Data from phi saturation model plot scan
    const int bins = 72;
    double min = 0, max = .18;
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double phi_min = 0, phi_max = 2*pi, qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double x_vals[bins] = {0.00149180044251802,0.00414660644107207,0.00658017860641328,0.00901375077175449,0.0116685567703085,0.0141021289356497,0.0167569349342038,0.019190507099545,
0.0216240792648862,0.0240576514302274,0.0264912235955686,0.0291460295941226,0.031358367926251,0.0340131739248051,0.0364467460901463,0.0388803182554875,0.0413138904208287,
0.0437474625861699,0.0464022685847239,0.0488358407500651,0.0514906467486192,0.0539242189139604,0.0565790249125144,0.0587913632446428,0.0614461692431968,0.063879741408538,
0.0663133135738793,0.0687468857392204,0.0714016917377745,0.0738352639031157,0.0762688360684569,0.078923642067011,0.0813572142323522,0.0837907863976934,0.0864455923962474,
0.0888791645615886,0.0913127367269298,0.093746308892271,0.0961798810576122,0.0988346870561663,0.101268259221507,0.103701831386849,0.10613540355219,0.108347741884318,
0.111223781716085,0.113657353881426,0.115869692213555,0.118745732045322,0.121400538043876,0.123391642542791,0.126267682374558,0.128480020706686,0.130913592872028,0.133568398870582,
0.13578073720271,0.138656777034477,0.140869115366605,0.143523921365159,0.145736259697288,0.148391065695842,0.151045871694396,0.153479443859737,0.155913016025078,0.158346588190419,
0.161001394188973,0.163213732521102,0.165868538519656,0.168302110684997,0.170735682850338,0.173390488848892,0.175824061014234,0.178257633179575};
    double y_vals[bins] = {558853.176136302,224087.526703047,77159.7780282615,21685.4626196854,3859.28092747389,469.329022940005,289.742995521137,760.224527180162,
1470.8807418139,1802.07568265643,1669.9354709361,1434.01276162091,1170.46235898057,841.471980674726,519.487609780666,282.480517526656,122.231121530435,44.2796290689089,
12.7645685962943,8.2906879074936,17.31009647318,34.352592563701,55.6447229185968,73.5686667137878,87.8747301398829,92.4512729862438,94.8281637591125,90.133959553294,
79.3900768010247,68.1741212520722,54.2499745313981,42.0876893247695,31.8336312913207,22.312279620763,14.1287559597991,8.94672119409074,4.99001275499674,2.71340713225333,
1.43847998384123,1.00823457225525,1.11598759598992,1.47546281479756,2.21472290755771,3.15981484859246,4.07292198289417,4.74299606783303,5.523310241139,6.11360281380503,
6.59736568024521,6.59736568024521,6.43200111987633,5.96036388624306,5.523310241139,5.11830428512649,4.50820725397009,3.87130332084099,3.08061332807508,2.64539492870511,
2.15921034425629,1.55230536986868,1.14467925737936,0.888053964582182,0.638442170129982,0.384266614281411,0.29811799949135,0.198608151462336,0.12899755970887,
0.139204998947095,0.150220141959229,0.162106901482951,0.198608151462336,0.237229223974273,};
    
    vector<double> x_vals_vec(x_vals, x_vals + 72);
    vector<double> y_vals_vec(y_vals, y_vals + 72);
    vector<double> par = {A,Vo,R,a0,phi_min,phi_max,qy_min,qx_prime_min,qy_min,qx_prime_min};
    vector<double> var(x_vals, x_vals + 72);
    
    FormFactor_saturation_data ff;
    ff.createGraph_data_wRes_wCut(var,par);
}

void FF_Jpsi_saturation()
{
    // data from J/psi saturation model plot scan
    const int bins = 70;
    double min = 0, max = .18;
    double x_vals[bins] = {0.00136281334124255, 0.00417373659242085, 0.00679726496018727, 0.0090460035611299, 0.0114821370454844, 0.0141056654132508, 0.0165417988976054, 0.0189779323819599,
0.0216014607497263, 0.0240375942340808, 0.0266611226018472, 0.0339695230549108, 0.0364056565392653, 0.0390291849070318, 0.0414653183913863, 0.0439014518757408,
0.0465249802435072, 0.0487737188444499, 0.0513972472122163, 0.0538333806965708, 0.0564569090643372, 0.0588930425486917, 0.0613291760330463, 0.0637653095174008,
0.0662014430017553, 0.0686375764861098, 0.0712611048538762, 0.0736972383382308, 0.0763207667059972, 0.0787569001903517, 0.0811930336747062, 0.0838165620424727,
0.0862526955268272, 0.0886888290111817, 0.0913123573789481, 0.0937484908633026, 0.0961846243476572, 0.0986207578320117, 0.101056891316366, 0.103680419684133,
0.106116553168487, 0.108552686652842, 0.110988820137196, 0.113612348504963, 0.116048481989317, 0.118484615473672, 0.120920748958026, 0.123356882442381,
0.125980410810147, 0.12822914941109, 0.131040072662268, 0.133288811263211, 0.135912339630977, 0.138348473115332, 0.140784606599686, 0.143408134967453,
0.145844268451807, 0.148467796819574, 0.150903930303928, 0.153340063788283, 0.155776197272637, 0.158399725640404, 0.160835859124758, 0.163271992609113,
0.165895520976879, 0.168331654461233, 0.170767787945588, 0.173391316313354, 0.175640054914297, 0.178076188398652};
    double y_vals[bins] = {13448.9218102926, 6937.46196167787, 3204.7878500576, 1305.08427031405, 446.872520224438, 103.18239774925, 8.55278296449268,
11.005917498039, 31.6399824551623, 54.9298751813913, 66.3663164066068, 60.3779220946169, 46.9201466951133, 32.653225248372, 21.3360051124315,
12.4849168326106, 6.24035001776384, 2.58162492032996, 0.912279863030455, 0.596094495215495, 1.1375147582384, 2.17069581349244, 3.37486862233193,
4.3428584331333, 5.16499432428701, 5.58848994755982, 5.7674564552788, 5.67726804222898, 5.41507684299759, 4.84942389709097, 4.14229378615772,
3.48294584122589, 2.83767526873991, 2.17069581349244, 1.60896053571582, 1.15558518403178, 0.779253636732963, 0.485658601659348, 0.288701178756081,
0.163693431856085, 0.110384508079367, 0.100424245161287, 0.148922974953952, 0.197774527183426, 0.27106213627279, 0.343354491666976, 0.408354089359272,
0.470588418718807, 0.525479418352291, 0.533827122649325, 0.586773086901781, 0.577597441807907, 0.568565280566255, 0.533827122649325, 0.525479418352291,
0.493373717141273, 0.434927240554336, 0.377409027059443, 0.322376245262033, 0.27974266435082, 0.238951332128076, 0.188640778332054, 0.151288747835883,
0.123260124544862, 0.0885276988118201, 0.06258796389094, 0.0486375871383818, 0.032285236309424, 0.0250891049438687, 0.0191920533212076};

    FormFactor_saturation_data ff;
    TGraph *test = ff.createGraph_data_noRes_noCut("test J/psi sat","|t| [GeV^{2}]","d#sigma/dt [nb/GeV^{2}]",bins,x_vals,y_vals);
}

void FF_Jpsi_saturation_wRes()
{
    // data from J/psi saturation model plot scan
    const int bins = 70;
    double min = 0, max = .18;
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double phi_min = 0, phi_max = 2*pi, qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double tx_prime_min = qx_prime_min*qx_prime_min, tx_prime_max = qx_prime_max*qx_prime_max, ty_min = qy_min*qy_min, ty_max = qy_max*qy_max;
    double x_vals[bins] = {0.00136281334124255, 0.00417373659242085, 0.00679726496018727, 0.0090460035611299, 0.0114821370454844, 0.0141056654132508, 0.0165417988976054, 0.0189779323819599,
0.0216014607497263, 0.0240375942340808, 0.0266611226018472, 0.0339695230549108, 0.0364056565392653, 0.0390291849070318, 0.0414653183913863, 0.0439014518757408,
0.0465249802435072, 0.0487737188444499, 0.0513972472122163, 0.0538333806965708, 0.0564569090643372, 0.0588930425486917, 0.0613291760330463, 0.0637653095174008,
0.0662014430017553, 0.0686375764861098, 0.0712611048538762, 0.0736972383382308, 0.0763207667059972, 0.0787569001903517, 0.0811930336747062, 0.0838165620424727,
0.0862526955268272, 0.0886888290111817, 0.0913123573789481, 0.0937484908633026, 0.0961846243476572, 0.0986207578320117, 0.101056891316366, 0.103680419684133,
0.106116553168487, 0.108552686652842, 0.110988820137196, 0.113612348504963, 0.116048481989317, 0.118484615473672, 0.120920748958026, 0.123356882442381,
0.125980410810147, 0.12822914941109, 0.131040072662268, 0.133288811263211, 0.135912339630977, 0.138348473115332, 0.140784606599686, 0.143408134967453,
0.145844268451807, 0.148467796819574, 0.150903930303928, 0.153340063788283, 0.155776197272637, 0.158399725640404, 0.160835859124758, 0.163271992609113,
0.165895520976879, 0.168331654461233, 0.170767787945588, 0.173391316313354, 0.175640054914297, 0.178076188398652};
    double y_vals[bins] = {13448.9218102926, 6937.46196167787, 3204.7878500576, 1305.08427031405, 446.872520224438, 103.18239774925, 8.55278296449268,
11.005917498039, 31.6399824551623, 54.9298751813913, 66.3663164066068, 60.3779220946169, 46.9201466951133, 32.653225248372, 21.3360051124315,
12.4849168326106, 6.24035001776384, 2.58162492032996, 0.912279863030455, 0.596094495215495, 1.1375147582384, 2.17069581349244, 3.37486862233193,
4.3428584331333, 5.16499432428701, 5.58848994755982, 5.7674564552788, 5.67726804222898, 5.41507684299759, 4.84942389709097, 4.14229378615772,
3.48294584122589, 2.83767526873991, 2.17069581349244, 1.60896053571582, 1.15558518403178, 0.779253636732963, 0.485658601659348, 0.288701178756081,
0.163693431856085, 0.110384508079367, 0.100424245161287, 0.148922974953952, 0.197774527183426, 0.27106213627279, 0.343354491666976, 0.408354089359272,
0.470588418718807, 0.525479418352291, 0.533827122649325, 0.586773086901781, 0.577597441807907, 0.568565280566255, 0.533827122649325, 0.525479418352291,
0.493373717141273, 0.434927240554336, 0.377409027059443, 0.322376245262033, 0.27974266435082, 0.238951332128076, 0.188640778332054, 0.151288747835883,
0.123260124544862, 0.0885276988118201, 0.06258796389094, 0.0486375871383818, 0.032285236309424, 0.0250891049438687, 0.0191920533212076};
/*
    vector<double> x_vals_vec(x_vals, x_vals + bins);
    vector<double> y_vals_vec(y_vals, y_vals + bins);
    vector<double> par = {A,Vo,R,a0,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max};
    //vector<double> var(x_vals, x_vals + bins);
    //vector<double> var = {x_vals, y_vals};
    vector<double> var;
var.reserve(x_vals_vec.size() + y_vals_vec.size());
var.insert(var.end(), x_vals_vec.begin(), x_vals_vec.end());
var.insert(var.end(), y_vals_vec.begin(), y_vals_vec.end());
*/
vector<double> x_vals_vec(x_vals, x_vals + bins);
    vector<double> par = {A,Vo,R,a0,phi_min,phi_max,ty_min,tx_prime_min,ty_min,tx_prime_min};
    vector<double> var(x_vals, x_vals + bins);


    
    FormFactor_saturation_data ff;
    ff.createGraph_data_wRes_noCut(var,par);
}

void FF_Jpsi_saturation_wCut()
{
    // data from J/psi saturation model plot scan
    const int bins = 70;
    double min = 0, max = .18;
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double phi_min = 0, phi_max = 2*pi, qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double x_vals[bins] = {0.00136281334124255, 0.00417373659242085, 0.00679726496018727, 0.0090460035611299, 0.0114821370454844, 0.0141056654132508, 0.0165417988976054, 0.0189779323819599,
0.0216014607497263, 0.0240375942340808, 0.0266611226018472, 0.0339695230549108, 0.0364056565392653, 0.0390291849070318, 0.0414653183913863, 0.0439014518757408,
0.0465249802435072, 0.0487737188444499, 0.0513972472122163, 0.0538333806965708, 0.0564569090643372, 0.0588930425486917, 0.0613291760330463, 0.0637653095174008,
0.0662014430017553, 0.0686375764861098, 0.0712611048538762, 0.0736972383382308, 0.0763207667059972, 0.0787569001903517, 0.0811930336747062, 0.0838165620424727,
0.0862526955268272, 0.0886888290111817, 0.0913123573789481, 0.0937484908633026, 0.0961846243476572, 0.0986207578320117, 0.101056891316366, 0.103680419684133,
0.106116553168487, 0.108552686652842, 0.110988820137196, 0.113612348504963, 0.116048481989317, 0.118484615473672, 0.120920748958026, 0.123356882442381,
0.125980410810147, 0.12822914941109, 0.131040072662268, 0.133288811263211, 0.135912339630977, 0.138348473115332, 0.140784606599686, 0.143408134967453,
0.145844268451807, 0.148467796819574, 0.150903930303928, 0.153340063788283, 0.155776197272637, 0.158399725640404, 0.160835859124758, 0.163271992609113,
0.165895520976879, 0.168331654461233, 0.170767787945588, 0.173391316313354, 0.175640054914297, 0.178076188398652};
    double y_vals[bins] = {13448.9218102926, 6937.46196167787, 3204.7878500576, 1305.08427031405, 446.872520224438, 103.18239774925, 8.55278296449268,
11.005917498039, 31.6399824551623, 54.9298751813913, 66.3663164066068, 60.3779220946169, 46.9201466951133, 32.653225248372, 21.3360051124315,
12.4849168326106, 6.24035001776384, 2.58162492032996, 0.912279863030455, 0.596094495215495, 1.1375147582384, 2.17069581349244, 3.37486862233193,
4.3428584331333, 5.16499432428701, 5.58848994755982, 5.7674564552788, 5.67726804222898, 5.41507684299759, 4.84942389709097, 4.14229378615772,
3.48294584122589, 2.83767526873991, 2.17069581349244, 1.60896053571582, 1.15558518403178, 0.779253636732963, 0.485658601659348, 0.288701178756081,
0.163693431856085, 0.110384508079367, 0.100424245161287, 0.148922974953952, 0.197774527183426, 0.27106213627279, 0.343354491666976, 0.408354089359272,
0.470588418718807, 0.525479418352291, 0.533827122649325, 0.586773086901781, 0.577597441807907, 0.568565280566255, 0.533827122649325, 0.525479418352291,
0.493373717141273, 0.434927240554336, 0.377409027059443, 0.322376245262033, 0.27974266435082, 0.238951332128076, 0.188640778332054, 0.151288747835883,
0.123260124544862, 0.0885276988118201, 0.06258796389094, 0.0486375871383818, 0.032285236309424, 0.0250891049438687, 0.0191920533212076};

    vector<double> x_vals_vec(x_vals, x_vals + bins);
    vector<double> par = {A,Vo,R,a0,phi_min,phi_max,qy_min,qx_prime_min,qy_min,qx_prime_min};
    vector<double> var(x_vals, x_vals + bins);
    
    FormFactor_saturation_data ff;
    ff.createGraph_data_noRes_wCut(var,par);
}

void FF_Jpsi_saturation_wRes_wCut()
{
    // data from J/psi saturation model plot scan
    const int bins = 70;
    double min = 0, max = .18;
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double phi_min = 0, phi_max = 2*pi, qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double tx_prime_min = qx_prime_min*qx_prime_min, tx_prime_max = qx_prime_max*qx_prime_max, ty_min = qy_min*qy_min, ty_max = qy_max*qy_max;
    double x_vals[bins] = {0.00136281334124255, 0.00417373659242085, 0.00679726496018727, 0.0090460035611299, 0.0114821370454844, 0.0141056654132508, 0.0165417988976054, 0.0189779323819599,
0.0216014607497263, 0.0240375942340808, 0.0266611226018472, 0.0339695230549108, 0.0364056565392653, 0.0390291849070318, 0.0414653183913863, 0.0439014518757408,
0.0465249802435072, 0.0487737188444499, 0.0513972472122163, 0.0538333806965708, 0.0564569090643372, 0.0588930425486917, 0.0613291760330463, 0.0637653095174008,
0.0662014430017553, 0.0686375764861098, 0.0712611048538762, 0.0736972383382308, 0.0763207667059972, 0.0787569001903517, 0.0811930336747062, 0.0838165620424727,
0.0862526955268272, 0.0886888290111817, 0.0913123573789481, 0.0937484908633026, 0.0961846243476572, 0.0986207578320117, 0.101056891316366, 0.103680419684133,
0.106116553168487, 0.108552686652842, 0.110988820137196, 0.113612348504963, 0.116048481989317, 0.118484615473672, 0.120920748958026, 0.123356882442381,
0.125980410810147, 0.12822914941109, 0.131040072662268, 0.133288811263211, 0.135912339630977, 0.138348473115332, 0.140784606599686, 0.143408134967453,
0.145844268451807, 0.148467796819574, 0.150903930303928, 0.153340063788283, 0.155776197272637, 0.158399725640404, 0.160835859124758, 0.163271992609113,
0.165895520976879, 0.168331654461233, 0.170767787945588, 0.173391316313354, 0.175640054914297, 0.178076188398652};
    double y_vals[bins] = {13448.9218102926, 6937.46196167787, 3204.7878500576, 1305.08427031405, 446.872520224438, 103.18239774925, 8.55278296449268,
11.005917498039, 31.6399824551623, 54.9298751813913, 66.3663164066068, 60.3779220946169, 46.9201466951133, 32.653225248372, 21.3360051124315,
12.4849168326106, 6.24035001776384, 2.58162492032996, 0.912279863030455, 0.596094495215495, 1.1375147582384, 2.17069581349244, 3.37486862233193,
4.3428584331333, 5.16499432428701, 5.58848994755982, 5.7674564552788, 5.67726804222898, 5.41507684299759, 4.84942389709097, 4.14229378615772,
3.48294584122589, 2.83767526873991, 2.17069581349244, 1.60896053571582, 1.15558518403178, 0.779253636732963, 0.485658601659348, 0.288701178756081,
0.163693431856085, 0.110384508079367, 0.100424245161287, 0.148922974953952, 0.197774527183426, 0.27106213627279, 0.343354491666976, 0.408354089359272,
0.470588418718807, 0.525479418352291, 0.533827122649325, 0.586773086901781, 0.577597441807907, 0.568565280566255, 0.533827122649325, 0.525479418352291,
0.493373717141273, 0.434927240554336, 0.377409027059443, 0.322376245262033, 0.27974266435082, 0.238951332128076, 0.188640778332054, 0.151288747835883,
0.123260124544862, 0.0885276988118201, 0.06258796389094, 0.0486375871383818, 0.032285236309424, 0.0250891049438687, 0.0191920533212076};

    vector<double> x_vals_vec(x_vals, x_vals + bins);
    vector<double> par = {A,Vo,R,a0,phi_min,phi_max,ty_min,tx_prime_min,ty_min,tx_prime_min};
    vector<double> var(x_vals, x_vals + bins);
    


FormFactor_saturation_data ff;
    ff.createGraph_data_wRes_wCut(var,par);
}



// Comparison tests
void compare_true_wCut()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0, q_max = 0.5, t_min = 0, t_max = 0.25;
    double phi_min = 0, phi_max = pi/9;

    FormFactor_1D ff1(A, Vo, R, a0, q_min, q_max, t_min, t_max, phi_min, phi_max);
    TF1 *trueFF = ff1.getFormFactort2_1D();
    //trueFF->SetLineColor(kBlack);  
    //trueFF->SetLineStyle(2);     

    double trueFFIntegral = trueFF->Integral(trueFF->GetXmin(), trueFF->GetXmax());

    // Create a new TF1 for the normalized trueFF
    TF1 *normalizedTrueFF = new TF1("normalizedTrueFF", [trueFF, trueFFIntegral](double *x, double *par) 
    {
        return trueFF->Eval(x[0]) / trueFFIntegral;
    }, trueFF->GetXmin(), trueFF->GetXmax(), 0);
    normalizedTrueFF->SetLineColor(kBlack);
    normalizedTrueFF->SetLineStyle(2);

    FormFactor_1D ff2(A, Vo, R, a0, q_min, q_max, t_min, t_max, phi_min, phi_max);
    TF1 *wedgeFF = ff2.getCutFormFactor_t2();
    //wedgeFF->SetLineColor(kRed); 
    //wedgeFF->SetLineStyle(3);     

    double wedgeFFIntegral = wedgeFF->Integral(wedgeFF->GetXmin(), wedgeFF->GetXmax());

    // Create a new TF1 for the normalized wedgeFF
    TF1 *normalizedWedgeFF = new TF1("normalizedWedgeFF", [wedgeFF, wedgeFFIntegral](double *x, double *par) 
    {
        return wedgeFF->Eval(x[0]) / wedgeFFIntegral;
    }, wedgeFF->GetXmin(), wedgeFF->GetXmax(), 0);
    normalizedWedgeFF->SetLineColor(kRed);
    normalizedWedgeFF->SetLineStyle(3);

    // Draw the normalized functions
    normalizedTrueFF->Draw();
    normalizedWedgeFF->Draw("same");

    TLegend *legend = new TLegend(0.75, 0.8, 0.9, 0.9);
    legend->AddEntry(normalizedTrueFF, "True Form Factor", "l");
    legend->AddEntry(normalizedWedgeFF, "Wedge Form Factor", "l");
    legend->Draw();
    gPad->Update();
}

void compare_pio9_res()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0, q_max = 0.5, t_min = 0, t_max = 0.25, phi_min = 0, phi_max = pi/9;
    double qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double ty_min = 0, ty_max = 0.25, tx_prime_min = 0, tx_prime_max = 0.25, bins = 1000; 
    double x_min = 0, x_max = 15, y_min = 0, y_max = 15, r_min = 0, r_max = 15;

    TCanvas *c1 = new TCanvas("c1", "Comparison of Form Factors", 800, 600);
    c1->SetLogy();

    double sigma5 = 0.005;
    FormFactor_resolution ff_5(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma5);
    TF1 *res_5percent= ff_5.getTest();
    //TH2D *res_5percent= ff_5.create_FormFactort_2Dcontour("Smeared Form Factor: |F(t)|^{2}","Smeared Form Factor: |F(t)|^{2}",bins,tx_prime_min,tx_prime_max,bins,ty_min,ty_max);
    res_5percent->SetLineColor(kRed);  
    res_5percent->SetLineStyle(3);    
    res_5percent->GetYaxis()->SetRangeUser(1e-10,1e2);
    res_5percent->Draw();
    //res_5percent->ProjectionY()->Draw("same");

    double sigma50 = .05;
    FormFactor_resolution ff_50(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma50);
    TF1 *res_50percent= ff_50.getTest();
    //TH2D *res_50percent= ff_50.create_FormFactort_2Dcontour("Smeared Form Factor: |F(t)|^{2}","Smeared Form Factor: |F(t)|^{2}",bins,tx_prime_min,tx_prime_max,bins,ty_min,ty_max);
    res_50percent->SetLineColor(kBlue);  
    res_50percent->SetLineStyle(1);    
    res_50percent->GetYaxis()->SetRangeUser(1e-10,1e2);
    res_50percent->Draw("same");
    //res_50percent->ProjectionY()->Draw("same");

    double sigma100 = 0.1;
    FormFactor_resolution ff_100(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma100);
    TF1 *res_100percent= ff_100.getTest();
    //TH2D *res_100percent= ff_100.create_FormFactort_2Dcontour("Smeared Form Factor: |F(t)|^{2}","Smeared Form Factor: |F(t)|^{2}",bins,tx_prime_min,tx_prime_max,bins,ty_min,ty_max);
    res_100percent->SetLineColor(kOrange);  
    res_100percent->SetLineStyle(3);  
    res_100percent->GetYaxis()->SetRangeUser(1e-10,1e2);
    res_100percent->Draw("same");
    //res_100percent->ProjectionY()->Draw("same");

    double sigma150 = 0.15;
    FormFactor_resolution ff_150(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma150);
    TF1 *res_150percent= ff_150.getTest();
    //TH2D *res_150percent= ff_150.create_FormFactort_2Dcontour("Smeared Form Factor: |F(t)|^{2}","Smeared Form Factor: |F(t)|^{2}",bins,tx_prime_min,tx_prime_max,bins,ty_min,ty_max);
    res_150percent->SetLineColor(kGreen);  
    res_150percent->SetLineStyle(3);    
    res_150percent->GetYaxis()->SetRangeUser(1e-10,1e2);
    //res_150percent->ProjectionY()->Draw("same");
    res_150percent->Draw("same");
/*
    FormFactor_1D ff2(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test2 = ff2.getCutFormFactor_t2();
    test2->SetLineColor(kMagenta); 
    test2->SetLineStyle(3);    
    test2->GetYaxis()->SetRangeUser(1e-10,1e2);
    test2->Draw("same");
*/
    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test = ff.getFormFactort2_1D();
    test->SetLineColor(kBlack); 
    test->GetYaxis()->SetRangeUser(1e-10,1e2);
    test->Draw("same");

    TLegend *legend = new TLegend(0.75, 0.7, 0.9, 0.9);
    legend->SetHeader("Form Factors", "C"); 
    legend->AddEntry(res_5percent, "5% Resolution", "l");
    legend->AddEntry(res_50percent, "50% Resolution", "l");
    legend->AddEntry(res_100percent, "100% Resolution", "l");
    legend->AddEntry(res_150percent, "150% Resolution", "l");
    //legend->AddEntry(test2, "No Resolution with Wedge", "l");
    legend->AddEntry(test, "No Resolution No Wedge", "l");
    legend->Draw();

    c1->Update();
}

void test_transform()
{
double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
double q_min = 0, q_max = 0.5, t_min = 0, t_max = 0.25, phi_min = 0, phi_max = pi/9;
double qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
double ty_min = 0, ty_max = 0.25, tx_prime_min = 0, tx_prime_max = 0.25, bins = 1000; 
double x_min = 0, x_max = 15, y_min = 0, y_max = 15, r_min = 0, r_max = 15;

FF_WS_Transforms ff2(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,bins,r_min,r_max);
TF1 *test2 = ff2.getFFtransform();
test2->SetLineColor(kOrange);
test2->SetLineStyle(1);
test2->Draw();

FormFactor_1D ff(A, Vo, R, a0, q_min, q_max, t_min, t_max, phi_min, phi_max);
TF1 *test = ff.getFormFactort2_1D();

// Create an instance of FF_WS_Transforms
FF_WS_Transforms transformer(A, Vo, R, a0, q_min, q_max, t_min, t_max, phi_min, phi_max, bins, r_min, r_max);

// Transform the TF1 object
TF1 *transformedTF1 = transformer.transformTF1(test, r_min, r_max,q_min,q_max);
transformedTF1->SetLineColor(kMagenta);
transformedTF1->SetLineStyle(3);
transformedTF1->GetYaxis()->SetRangeUser(1e-20,1e2);
transformedTF1->Draw("same");

}

void compare_pio9_wRes_transformations()
{
    double A = 197, Vo = 2.12, R = 6.38, a0 = 0.7;
    double q_min = 0, q_max = 0.5, t_min = 0, t_max = 0.25, phi_min = 0, phi_max = pi/9;
    double qy_min = 0, qy_max = 0.5, qx_prime_min = 0, qx_prime_max = 0.5;
    double ty_min = 0, ty_max = 0.25, tx_prime_min = 0, tx_prime_max = 0.25, bins = 1000; 
    double x_min = 0, x_max = 15, y_min = 0, y_max = 15, r_min = 0, r_max = 15;

    TCanvas *c1 = new TCanvas("c1", "Comparison of Form Factors", 800, 600);

    double sigma5 = 0.005;
    FormFactor_resolution ff_5(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma5);
    TF1 *res_5percent= ff_5.getTest();

    FF_WS_Transforms transformer5(A, Vo, R, a0, q_min, q_max, t_min, t_max, phi_min, phi_max, bins, r_min, r_max);
    TF1 *transformed_5 = transformer5.transformTF1(res_5percent, r_min, r_max,q_min,q_max);
    transformed_5->SetLineColor(kRed);  
    transformed_5->SetLineStyle(3);    
    //transformed_5->GetYaxis()->SetRangeUser(1e-10,1e2);
    transformed_5->Draw();
   

    double sigma50 = .05;
    FormFactor_resolution ff_50(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma50);
    TF1 *res_50percent= ff_50.getTest();
    
    FF_WS_Transforms transformer50(A, Vo, R, a0, q_min, q_max, t_min, t_max, phi_min, phi_max, bins, r_min, r_max);
    TF1 *transformed_50 = transformer50.transformTF1(res_50percent, r_min, r_max,q_min,q_max);
    transformed_50->SetLineColor(kBlue);  
    transformed_50->SetLineStyle(3);    
    //transformed_50->GetYaxis()->SetRangeUser(1e-10,1e2);
    transformed_50->Draw("same");

    double sigma100 = 0.1;
    FormFactor_resolution ff_100(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma100);
    TF1 *res_100percent= ff_100.getTest();
    
    FF_WS_Transforms transformer100(A, Vo, R, a0, q_min, q_max, t_min, t_max, phi_min, phi_max, bins, r_min, r_max);
    TF1 *transformed_100 = transformer100.transformTF1(res_100percent, r_min, r_max,q_min,q_max);
    transformed_100->SetLineColor(kOrange);  
    transformed_100->SetLineStyle(3);    
    //transformed_100->GetYaxis()->SetRangeUser(1e-10,1e2);
    transformed_100->Draw("same");

    double sigma150 = 0.15;
    FormFactor_resolution ff_150(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,qy_min,qy_max,qx_prime_min,qx_prime_max,ty_min,ty_max,tx_prime_min,tx_prime_max,bins,bins,bins,bins,bins,x_min,x_max,y_min,y_max,r_min,r_max,sigma150);
    TF1 *res_150percent= ff_150.getTest();
    
    FF_WS_Transforms transformer150(A, Vo, R, a0, q_min, q_max, t_min, t_max, phi_min, phi_max, bins, r_min, r_max);
    TF1 *transformed_150 = transformer150.transformTF1(res_150percent, r_min, r_max,q_min,q_max);
    transformed_150->SetLineColor(kMagenta);  
    transformed_150->SetLineStyle(3);    
    //transformed_150->GetYaxis()->SetRangeUser(1e-10,1e2);
    transformed_150->Draw("same");

    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max);
    TF1 *test = ff.getFormFactort2_1D();

    FF_WS_Transforms transformerff(A, Vo, R, a0, q_min, q_max, t_min, t_max, phi_min, phi_max, bins, r_min, r_max);
    TF1 *transformed_test = transformerff.transformTF1(test, r_min, r_max,q_min,q_max);
    transformed_test->SetLineColor(kBlack);     
    transformed_test->SetLineStyle(3); 
    //transformed_test->GetYaxis()->SetRangeUser(1e-10,1e2);
    transformed_test->Draw("same");

    TLegend *legend = new TLegend(0.75, 0.7, 0.9, 0.9);
    legend->SetHeader("Form Factors", "C"); 
    legend->AddEntry(transformed_5, "5% Resolution", "l");
    legend->AddEntry(transformed_50, "50% Resolution", "l");
    legend->AddEntry(transformed_100, "100% Resolution", "l");
    legend->AddEntry(transformed_150, "150% Resolution", "l");
    legend->AddEntry(transformed_test, "No Resolution No Wedge", "l");
    legend->Draw();

    c1->Update();
}







// not working
void compare_transformed_WS_wTrue_FF()
{
    double Vo = 2.12, R = 6.38, a = 0.535, r_min = 0, r_max = 10;
    double bins = 1000, t_min = 0.0001, t_max = 0.1;
    WoodsSaxon_1D ws(Vo,R,a,r_min,r_max,bins,t_min,t_max);
    TF1 *transformedWS = ws.getWStransform();

    //double scaleWS = 197.0 / transformedWS->Integral(r_min,r_max);
    //transformedWS->SetParameter(0, transformedWS->GetParameter(0)*scaleWS);
    double integralWS = transformedWS->Integral(r_min, r_max);
    //transformedWS->SetParameter(0, transformedWS->GetParameter(0) / integralWS);
    transformedWS->SetParameter(0, transformedWS->GetParameter(0)*197/integralWS);
    transformedWS->SetLineColor(kBlack);  
    transformedWS->SetLineStyle(1);     
    transformedWS->Draw();
/*
    double A = 197, a0 = 0.7;
    double q_min = 0.001, q_max = 0.3;
    double phi_min = 0, phi_max = 2*pi;
    FormFactor_1D ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,bins,r_min,r_max);
    TF1 *trueFF = ff.getFormFactort2_1D();

    //double scaleFF = A / trueFF->Integral(t_min,t_max);
    //trueFF->SetParameter(0, trueFF->GetParameter(0)*scaleFF);
    double integralFF = trueFF->Integral(t_min, t_max);
    //trueFF->SetParameter(0, trueFF->GetParameter(0) / integralFF);
    trueFF->SetParameter(0, trueFF->GetParameter(0) *197/integralFF);
    trueFF->SetLineColor(kRed);  
    trueFF->SetLineStyle(3);     
    trueFF->Draw("same");
    */
   /*
    double A = 197, a0 = 0.7;
    double q_min = 0, q_max = 0.5;
    double phi_min = 0, phi_max = 2*pi;
    FF_WS_Transforms ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,bins,r_min,r_max);
    TH1D *trueFF = ff.getTransformFFhist();
    trueFF->Scale(197./trueFF->Integral(), "width");
    trueFF->SetLineColor(kRed);  
    trueFF->SetLineStyle(3);     
    trueFF->Draw("same");
    */
}
/*
void compare_transformed_FF_wTrue_WS()
{
    double Vo = 2.12, R = 6.38, a = 0.535, r_min = 0, r_max = 10;
    double bins = 1000, t_min = 0, t_max = 0.25;
    WoodsSaxon_1D ws(Vo,R,a,r_min,r_max,bins,t_min,t_max);
    TF1 *trueWS = ws.getWoodsSaxon1D();
    trueWS->SetLineColor(kBlack);  
    trueWS->SetLineStyle(1);    
    trueWS->Draw();

    double A = 197, a0 = 0.7;
    double q_min = 0, q_max = 0.5;
    double phi_min = 0, phi_max = 2*pi;
    FF_WS_Transforms ff(A,Vo,R,a0,q_min,q_max,t_min,t_max,phi_min,phi_max,bins,r_min,r_max);
    TF1 *transformedFF = ff.getFFtransform();
    transformedFF->SetLineColor(kRed);  
    transformedFF->SetLineStyle(3);    
    transformedFF->Draw("same");
}
*/




